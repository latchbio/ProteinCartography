Step 1/14 : from 812206152185.dkr.ecr.us-west-2.amazonaws.com/latch-base-snakemake:0.1.0


 ---> 1e5e51399e11

Step 2/14 : workdir /tmp/docker-build/work/


 ---> Using cache

 ---> a2fe8f5de25e

Step 3/14 : shell [     "/usr/bin/env", "bash",     "-o", "errexit",     "-o", "pipefail",     "-o", "nounset",     "-o", "verbose",     "-o", "errtrace",     "-O", "inherit_errexit",     "-O", "shift_verbose",     "-c" ]


 ---> Using cache

 ---> 2f50b1c6ffcd

Step 4/14 : env TZ='Etc/UTC'


 ---> Using cache

 ---> 6e333bcbf09d

Step 5/14 : env LANG='en_US.UTF-8'


 ---> Using cache

 ---> 50828948253a

Step 6/14 : arg DEBIAN_FRONTEND=noninteractive


 ---> Using cache

 ---> 8eac2f1ad665

Step 7/14 : run pip install latch==2.54.0a8


 ---> Using cache

 ---> 264b02defe04

Step 8/14 : run mkdir /opt/latch


 ---> Using cache

 ---> f07bf9ffb48b

Step 9/14 : copy snakemake_executor_plugin_latch /root/snakemake_executor_plugin_latch


 ---> Using cache

 ---> dbe947f4c7c3

Step 10/14 : run pip install /root/snakemake_executor_plugin_latch


 ---> Using cache

 ---> aaebf1f6f2a6

Step 11/14 : copy . /root/


 ---> 80e184cd47f9

Step 12/14 : arg tag


 ---> Running in e1bd751c4ea3

 ---> 5591ee693ccf

Step 13/14 : env FLYTE_INTERNAL_IMAGE $tag


 ---> Running in ae5fe98a3656

 ---> 234fded4e61a

Step 14/14 : workdir /root


 ---> Running in 52ff001b8f8f

 ---> 06b6ffb024b9

Successfully built 06b6ffb024b9

Successfully tagged 812206152185.dkr.ecr.us-west-2.amazonaws.com/38_wf_entrypoint_snakemake_v2_arcadia_protein_cartography_workflow:0.3.3

