Step 1/16 : from 812206152185.dkr.ecr.us-west-2.amazonaws.com/latch-base-snakemake:0.1.0


 ---> 1e5e51399e11

Step 2/16 : workdir /tmp/docker-build/work/


 ---> Using cache

 ---> a2fe8f5de25e

Step 3/16 : shell [     "/usr/bin/env", "bash",     "-o", "errexit",     "-o", "pipefail",     "-o", "nounset",     "-o", "verbose",     "-o", "errtrace",     "-O", "inherit_errexit",     "-O", "shift_verbose",     "-c" ]


 ---> Using cache

 ---> 2f50b1c6ffcd

Step 4/16 : env TZ='Etc/UTC'


 ---> Using cache

 ---> 6e333bcbf09d

Step 5/16 : env LANG='en_US.UTF-8'


 ---> Using cache

 ---> 50828948253a

Step 6/16 : arg DEBIAN_FRONTEND=noninteractive


 ---> Using cache

 ---> 8eac2f1ad665

Step 7/16 : run pip install latch==2.54.0a8


 ---> Using cache

 ---> 264b02defe04

Step 8/16 : run mkdir /opt/latch


 ---> Using cache

 ---> f07bf9ffb48b

Step 9/16 : copy snakemake_executor_plugin_latch /root/snakemake_executor_plugin_latch


 ---> Using cache

 ---> dbe947f4c7c3

Step 10/16 : run pip install /root/snakemake_executor_plugin_latch


 ---> Using cache

 ---> aaebf1f6f2a6

Step 11/16 : env LATCH_SDK_DOMAIN ligma.ai


 ---> Running in a69600989157

 ---> 0ae1411e52e7

Step 12/16 : env LATCH_AUTHENTICATION_ENDPOINT https://nucleus.ligma.ai


 ---> Running in f7289a5fd9d2

 ---> 9e3816a3e435

Step 13/16 : copy . /root/


 ---> 492038f60a2a

Step 14/16 : arg tag


 ---> Running in 1363d19bfe1e

 ---> d2c247aa2356

Step 15/16 : env FLYTE_INTERNAL_IMAGE $tag


 ---> Running in bb7bfa633577

 ---> b5fd486ffe52

Step 16/16 : workdir /root


 ---> Running in bfcc92f6d4ea

 ---> 039026cea776

Successfully built 039026cea776

Successfully tagged 812206152185.dkr.ecr.us-west-2.amazonaws.com/38_wf_entrypoint_snakemake_v2_arcadia_protein_cartography_workflow:0.3.4

